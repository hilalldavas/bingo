rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users collection - kullanıcılar kendi profillerini okuyup yazabilir, diğerlerini sadece okuyabilir
    match /users/{userId} {
      // Kullanıcı kendi profilini okuyup yazabilir
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Giriş yapmış kullanıcılar diğer kullanıcıların profillerini sadece okuyabilir
      allow read: if request.auth != null;
      
      // Kullanıcı adı benzersizlik kontrolü için whereField sorgularına izin ver
      allow read: if request.auth != null && 
        request.query.limit <= 10 &&
        resource.data.keys().hasAll(['username']) == false;
    }
    
    // Posts collection - giriş yapmış kullanıcılar okuyabilir, sadece yazarı yazabilir
    match /posts/{postId} {
      // Herkes okuyabilir
      allow read: if request.auth != null;
      
      // Sadece yazarı yazabilir
      allow create: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.authorId;
      
      // Post comments - giriş yapmış kullanıcılar okuyabilir, sadece yazarı yazabilir
      match /comments/{commentId} {
        allow read: if request.auth != null;
        
        allow create: if request.auth != null && 
          request.auth.uid == resource.data.authorId;
        
        allow update: if request.auth != null && 
          request.auth.uid == resource.data.authorId;
        
        allow delete: if request.auth != null && 
          request.auth.uid == resource.data.authorId;
      }
      
      // Post likes - giriş yapmış kullanıcılar okuyabilir, sadece kendi like'ını yazabilir
      match /likes/{likeId} {
        allow read: if request.auth != null;
        
        allow create: if request.auth != null && 
          request.auth.uid == resource.data.userId;
        
        allow delete: if request.auth != null && 
          request.auth.uid == resource.data.userId;
      }
    }
  }
}
